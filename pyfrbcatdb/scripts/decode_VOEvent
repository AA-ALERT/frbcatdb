#!/usr/bin/env python

'''
description:    Create a db entry for a VOEvent: Runner
license:        APACHE 2.0
author:         Ronald van Haren, NLeSC (r.vanharen@esciencecenter.nl)
'''

import configargparse
from pyfrbcatdb import decode_VOEvent
import sys
import os
from os import environ as env 

def cli_parser():
    '''
    parse command line arguments:
        should be single/multiple valid VOEvent xml files
    '''
    cfile = os.path.join(sys.prefix, 'etc', 'pyfrbcatdb', 'dbase.config')
    parser = configargparse.ArgumentParser(default_config_files=[cfile],
        description='Process VOEvent XML file '
                                     'and add it to FRB database')
    parser.add('-c', '--my-config', required=False, is_config_file=True, help='config file path')
    parser.add('--DB_NAME', required=True, help='name postgres database', env_var='DB_NAME')
    parser.add('--DB_HOST', help='name postgres database', env_var='DB_HOST')
    parser.add('--DB_PORT', help='name postgres database', env_var='DB_PORT')
    parser.add('--USER_NAME', required=True, help='user postgres database', env_var='USER_NAME')
    parser.add('--USER_PASSWORD', help='user postgres database', env_var='USER_PASSWORD')
    parser.add('--LOG_FILE', help='log file', env_var='LOG_FILE')
    parser.add('VOEvents', metavar='VOEvent',
                        type=configargparse.FileType('rb'), nargs='+',
                        help='List of VOEvent XML files')
    results = parser.parse_args()
    return results


if __name__ == "__main__":
    results = cli_parser()
    for voevent in results.VOEvents:
        decode_VOEvent.decode_VOEvent(voevent, results.DB_NAME,
                                      results.DB_HOST, results.DB_PORT,
                                      results.USER_NAME, results.USER_PASSWORD,
                                      results.LOG_FILE)
        voevent.close()
